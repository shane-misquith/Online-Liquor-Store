package project;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class AdminPage extends javax.swing.JFrame {

    public AdminPage() {
        initComponents();
        
        Toolkit tool = Toolkit.getDefaultToolkit();
        Dimension dim = new Dimension(tool.getScreenSize());
        int height = (int)dim.getHeight();
        int width = (int) dim.getWidth();      
        setSize(width,height);
        setLocation(width/2-getWidth() /2 , height/2-getHeight() /2);
        
        DefaultTableModel model = (DefaultTableModel) user_table.getModel();
        
        deleteAllRows(model);
        try {
                    Class.forName("oracle.jdbc.OracleDriver");
                    Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");                    
                    String query="select username,name,email,address,phone from registration ";
                    PreparedStatement pre=con.prepareStatement(query);
                    ResultSet re=pre.executeQuery();
                    while(re.next()){
                        String user_name = re.getString("username");
                        String name = re.getString("name");
                        String email = re.getString("email");
                        String addr = re.getString("address");
                        String phone = re.getString("phone").toString();
                        model.addRow(new Object[]{user_name,name,email,addr,phone});
                    }
        }catch(ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(null,"User does not exist");
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        Inv_button = new javax.swing.JButton();
        oder_button = new javax.swing.JButton();
        user_button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        InventoryPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        stock_box = new javax.swing.JTextField();
        update_invent = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        invent_table = new javax.swing.JTable();
        productname = new javax.swing.JComboBox<>();
        type = new javax.swing.JComboBox<>();
        search_invent = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        delete_invent = new javax.swing.JButton();
        OrdersPanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        completed_order = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        orders_total = new javax.swing.JTable();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        status_box = new javax.swing.JComboBox<>();
        search_orders = new javax.swing.JButton();
        UserPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        user_table = new javax.swing.JTable();
        delete_search = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        s_user = new javax.swing.JTextField();
        search_user = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        user_review_table = new javax.swing.JTable();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        log_out = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1920, 917));

        jPanel1.setBackground(new java.awt.Color(103, 0, 0));
        jPanel1.setForeground(new java.awt.Color(103, 0, 0));

        jPanel3.setBackground(new java.awt.Color(103, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        Inv_button.setBackground(new java.awt.Color(248, 148, 6));
        Inv_button.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Inv_button.setForeground(new java.awt.Color(255, 255, 255));
        Inv_button.setText("Inventory");
        Inv_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inv_buttonActionPerformed(evt);
            }
        });

        oder_button.setBackground(new java.awt.Color(248, 148, 6));
        oder_button.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        oder_button.setForeground(new java.awt.Color(255, 255, 255));
        oder_button.setText("Orders");
        oder_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oder_buttonActionPerformed(evt);
            }
        });

        user_button.setBackground(new java.awt.Color(248, 148, 6));
        user_button.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        user_button.setForeground(new java.awt.Color(255, 255, 255));
        user_button.setText("Users");
        user_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_buttonActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/SideLogo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(user_button, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oder_button, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Inv_button, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Inv_button, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(oder_button, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(user_button, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/CloseButton.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 80)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Admin");

        jPanel2.setLayout(new java.awt.CardLayout());

        InventoryPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 55)); // NOI18N
        jLabel2.setText("Inventory");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Stock:");

        stock_box.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        update_invent.setBackground(new java.awt.Color(103, 0, 0));
        update_invent.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        update_invent.setForeground(new java.awt.Color(255, 255, 255));
        update_invent.setText("Update");
        update_invent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_inventActionPerformed(evt);
            }
        });

        invent_table.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        invent_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Type", "Price", "Stock"
            }
        ));
        jScrollPane1.setViewportView(invent_table);

        productname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        productname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Beer", "Liquor", "Rum", "Vodka", "Wine", "Whiskey" }));
        productname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productnameActionPerformed(evt);
            }
        });

        type.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Available ", "Out of stock" }));

        search_invent.setBackground(new java.awt.Color(103, 0, 0));
        search_invent.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        search_invent.setForeground(new java.awt.Color(255, 255, 255));
        search_invent.setText("Search");
        search_invent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_inventActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setText("Update stock:");

        delete_invent.setBackground(new java.awt.Color(103, 0, 0));
        delete_invent.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        delete_invent.setForeground(new java.awt.Color(255, 255, 255));
        delete_invent.setText("Delete");
        delete_invent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_inventActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InventoryPanelLayout = new javax.swing.GroupLayout(InventoryPanel);
        InventoryPanel.setLayout(InventoryPanelLayout);
        InventoryPanelLayout.setHorizontalGroup(
            InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryPanelLayout.createSequentialGroup()
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(InventoryPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(productname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(search_invent, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InventoryPanelLayout.createSequentialGroup()
                        .addGap(695, 695, 695)
                        .addComponent(delete_invent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(update_invent))
                    .addGroup(InventoryPanelLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(InventoryPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(stock_box, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(InventoryPanelLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(602, 602, 602)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(InventoryPanelLayout.createSequentialGroup()
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InventoryPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1573, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 1564, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(InventoryPanelLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(InventoryPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1536, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 22, Short.MAX_VALUE))
        );
        InventoryPanelLayout.setVerticalGroup(
            InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stock_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_invent, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(update_invent))
                .addGap(31, 31, 31)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_invent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        jPanel2.add(InventoryPanel, "card2");

        OrdersPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel16.setText("Order Management:");

        completed_order.setBackground(new java.awt.Color(103, 0, 0));
        completed_order.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        completed_order.setForeground(new java.awt.Color(255, 255, 255));
        completed_order.setText("Completed");
        completed_order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completed_orderActionPerformed(evt);
            }
        });

        orders_total.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        orders_total.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order_id", "Username", "Name", "Address", "Product Name", "Quantity", "price", "Payment Type", "Payment Status", "Order Status"
            }
        ));
        jScrollPane4.setViewportView(orders_total);
        if (orders_total.getColumnModel().getColumnCount() > 0) {
            orders_total.getColumnModel().getColumn(0).setMinWidth(80);
            orders_total.getColumnModel().getColumn(0).setMaxWidth(80);
            orders_total.getColumnModel().getColumn(1).setMinWidth(160);
            orders_total.getColumnModel().getColumn(1).setMaxWidth(160);
            orders_total.getColumnModel().getColumn(2).setMinWidth(140);
            orders_total.getColumnModel().getColumn(2).setMaxWidth(140);
            orders_total.getColumnModel().getColumn(3).setMinWidth(300);
            orders_total.getColumnModel().getColumn(3).setMaxWidth(300);
            orders_total.getColumnModel().getColumn(5).setMinWidth(80);
            orders_total.getColumnModel().getColumn(5).setMaxWidth(80);
            orders_total.getColumnModel().getColumn(6).setMinWidth(80);
            orders_total.getColumnModel().getColumn(6).setMaxWidth(80);
        }

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Order Status:");

        status_box.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        status_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-All-", "Pending", "Completed" }));

        search_orders.setBackground(new java.awt.Color(103, 0, 0));
        search_orders.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        search_orders.setForeground(new java.awt.Color(255, 255, 255));
        search_orders.setText("Search");
        search_orders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_ordersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OrdersPanelLayout = new javax.swing.GroupLayout(OrdersPanel);
        OrdersPanel.setLayout(OrdersPanelLayout);
        OrdersPanelLayout.setHorizontalGroup(
            OrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrdersPanelLayout.createSequentialGroup()
                .addGroup(OrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrdersPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(OrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 1515, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(OrdersPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(OrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1474, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(61, Short.MAX_VALUE))
            .addGroup(OrdersPanelLayout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(status_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(search_orders, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(completed_order)
                .addGap(97, 97, 97))
        );
        OrdersPanelLayout.setVerticalGroup(
            OrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrdersPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGroup(OrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrdersPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(OrdersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(status_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_orders)))
                    .addGroup(OrdersPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(completed_order)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        jPanel2.add(OrdersPanel, "card2");

        UserPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 55)); // NOI18N
        jLabel8.setText("Users:");

        user_table.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        user_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Name", "E-mail", "Address", "Phone"
            }
        ));
        jScrollPane2.setViewportView(user_table);
        if (user_table.getColumnModel().getColumnCount() > 0) {
            user_table.getColumnModel().getColumn(3).setMinWidth(600);
            user_table.getColumnModel().getColumn(3).setMaxWidth(600);
        }

        delete_search.setBackground(new java.awt.Color(103, 0, 0));
        delete_search.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        delete_search.setForeground(new java.awt.Color(255, 255, 255));
        delete_search.setText("Delete");
        delete_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_searchActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setText("Username:");

        s_user.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        search_user.setBackground(new java.awt.Color(103, 0, 0));
        search_user.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        search_user.setForeground(new java.awt.Color(255, 255, 255));
        search_user.setText("Search");
        search_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_userActionPerformed(evt);
            }
        });

        user_review_table.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        user_review_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Rating", "Review"
            }
        ));
        jScrollPane3.setViewportView(user_review_table);
        if (user_review_table.getColumnModel().getColumnCount() > 0) {
            user_review_table.getColumnModel().getColumn(0).setMinWidth(150);
            user_review_table.getColumnModel().getColumn(0).setMaxWidth(150);
            user_review_table.getColumnModel().getColumn(1).setMinWidth(80);
            user_review_table.getColumnModel().getColumn(1).setMaxWidth(80);
        }

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("User reviews:");

        javax.swing.GroupLayout UserPanelLayout = new javax.swing.GroupLayout(UserPanel);
        UserPanel.setLayout(UserPanelLayout);
        UserPanelLayout.setHorizontalGroup(
            UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserPanelLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 1552, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 1568, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1348, 1348, 1348))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1505, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
            .addGroup(UserPanelLayout.createSequentialGroup()
                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserPanelLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UserPanelLayout.createSequentialGroup()
                                .addComponent(delete_search)
                                .addGap(28, 28, 28)
                                .addComponent(search_user))
                            .addComponent(s_user, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(UserPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UserPanelLayout.setVerticalGroup(
            UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_search)
                    .addComponent(search_user))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        jPanel2.add(UserPanel, "card2");

        log_out.setBackground(new java.awt.Color(248, 148, 6));
        log_out.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        log_out.setForeground(new java.awt.Color(255, 255, 255));
        log_out.setText("Log Out");
        log_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                log_outActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(663, 663, 663))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(log_out, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(log_out, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1891, 1080));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void Inv_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inv_buttonActionPerformed
        // TODO add your handling code here:
        jPanel2.removeAll();
        jPanel2.repaint();
        jPanel2.revalidate();
        
        jPanel2.add(InventoryPanel);
        jPanel2.repaint();
        jPanel2.revalidate();
    }//GEN-LAST:event_Inv_buttonActionPerformed

    private void oder_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oder_buttonActionPerformed
        // TODO add your handling code here:
        jPanel2.removeAll();
        jPanel2.repaint();
        jPanel2.revalidate();
        
        jPanel2.add(OrdersPanel);
        jPanel2.repaint();
        jPanel2.revalidate();
        
        DefaultTableModel model = (DefaultTableModel) orders_total.getModel();
        deleteAllRows(model);
        try {
                    Class.forName("oracle.jdbc.OracleDriver");
                    Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");                    
                    String query="select * from orders order by order_id";
                    PreparedStatement pre=con.prepareStatement(query);
                    ResultSet re=pre.executeQuery();
                    while(re.next()){
                        String ord_id = re.getString("order_id");
                        String user_name = re.getString("username");
                        String name = re.getString("name");
                        String addr = re.getString("address");
                        String pro_name = re.getString("product_name");
                        String quantity = re.getString("quantity");
                        String price = re.getString("price");
                        String pay_status = re.getString("payment_status");
                        String order_status = re.getString("order_status");
                        String pay_type = re.getString("payment_type");
                        model.addRow(new Object[]{ord_id,user_name,name,addr,pro_name,quantity,price,pay_type,pay_status,order_status});
                    }               
            }catch(ClassNotFoundException | SQLException ex){
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_oder_buttonActionPerformed

    private void user_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_buttonActionPerformed
        // TODO add your handling code here:
        jPanel2.removeAll();
        jPanel2.repaint();
        jPanel2.revalidate();
        
        jPanel2.add(UserPanel);
        jPanel2.repaint();
        jPanel2.revalidate();
        DefaultTableModel model = (DefaultTableModel) user_table.getModel();
        deleteAllRows(model);
        try {
                    Class.forName("oracle.jdbc.OracleDriver");
                    Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");                    
                    String query="select username,name,email,address,phone from registration ";
                    PreparedStatement pre=con.prepareStatement(query);
                    ResultSet re=pre.executeQuery();
                    while(re.next()){
                        String user_name = re.getString("username");
                        String name = re.getString("name");
                        String email = re.getString("email");
                        String addr = re.getString("address");
                        String phone = re.getString("phone").toString();
                        model.addRow(new Object[]{user_name,name,email,addr,phone});
                        
                    }
                    con.close();
        }catch(ClassNotFoundException | SQLException ex){
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultTableModel model3 = (DefaultTableModel) user_review_table.getModel();
        deleteAllRows(model3);
        try {
                    Class.forName("oracle.jdbc.OracleDriver");
                    Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");                    
                    String query="select username,rating,review from user_review";
                    PreparedStatement pre=con.prepareStatement(query);
                    ResultSet re=pre.executeQuery();
                    while(re.next()){
                        String user_name = re.getString("username");
                        String rating = re.getString("rating");
                        String review = re.getString("review");
                        
                        model3.addRow(new Object[]{user_name,rating,review});
                    }
                    con.close();
        }catch(ClassNotFoundException | SQLException ex){
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_user_buttonActionPerformed

    private void productnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productnameActionPerformed

    private void search_inventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_inventActionPerformed
        DefaultTableModel model = (DefaultTableModel) invent_table.getModel();
        deleteAllRows(model);
        String prod_name=(String)productname.getSelectedItem();
        String prod_avail=(String)type.getSelectedItem();
        try 
            {
                Class.forName("oracle.jdbc.OracleDriver");
            try (Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95")) {
                Statement stat=con.createStatement();
                ResultSet rs;
                
                if("Any".equals(prod_name)&& "Any".equals(prod_avail))
                {
                    rs=stat.executeQuery("select product_type,product_name,price,stock from product_list");
                }
                else{
                    if("Any".equals(prod_name))
                    {
                        if(prod_avail.equals("Out of stock")){
                            rs=stat.executeQuery("select product_type,product_name,price,stock from product_list where stock='0'" );
                        }
                        else
                            rs=stat.executeQuery("select product_type,product_name,price,stock from product_list where stock !='0'");
                    }
                    else{
                        if("Any".equals(prod_avail))
                        {
                            rs=stat.executeQuery("select product_type,product_name,price,stock from product_list where product_type='"+prod_name+"'");
                        }
                        else
                        {
                            if(prod_avail.equals("Out of stock")){
                                rs=stat.executeQuery("select product_type,product_name,price,stock from product_list where product_type='"+prod_name+"' and stock='0'" );
                            }
                            else
                                rs=stat.executeQuery("select product_type,product_name,price,stock from product_list where product_type='"+prod_name+"' and stock !='0'");
                            
                        }
                    }
                }    
                while(rs.next())
                {

                    String name = rs.getString("product_name");
                    String type = rs.getString("product_type");
                    String price = rs.getString("price");
                    String stock = rs.getString("stock");
                    model.addRow(new Object[]{name,type,price,stock});
                }
            } catch (SQLException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            }
                
            } 

             
            catch (ClassNotFoundException ex) 
            {
                Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);

            }

    }//GEN-LAST:event_search_inventActionPerformed

    private void update_inventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_inventActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) invent_table.getModel();
        int SelectedRowIndex = invent_table.getSelectedRow();
        String product = model.getValueAt(SelectedRowIndex,0).toString().trim();
        String stock_up =stock_box.getText();
        try {
                    Class.forName("oracle.jdbc.OracleDriver");
                    Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");                    
                    String query="update product_list set stock = stock +'"+ stock_up+"' where product_name='"+product+"'  ";
                    PreparedStatement pre=con.prepareStatement(query);
                    ResultSet re=pre.executeQuery();
                    if(re.next()){
                       JOptionPane.showMessageDialog(null,"Product stock updated");
                    }
                }catch(ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(null,"Product entered does not exist");
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_update_inventActionPerformed

    private void delete_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_searchActionPerformed
        // TODO add your handling code here:
        String user = s_user.getText();
        DefaultTableModel model = (DefaultTableModel) user_table.getModel();
        deleteAllRows(model);
        try {
                    Class.forName("oracle.jdbc.OracleDriver");
                    Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");                    
                    String query="delete from registration where username ='"+user+"'";
                    PreparedStatement pre=con.prepareStatement(query);
                    ResultSet re=pre.executeQuery();
                    JOptionPane.showMessageDialog(null,"User account deleted");
                    jPanel2.removeAll();
                    jPanel2.repaint();
                    jPanel2.revalidate();

                    jPanel2.add(UserPanel);
                    jPanel2.repaint();
                    jPanel2.revalidate();
                    con.close();
                }catch(ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(null,"User does not exist");
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
                }
        
    }//GEN-LAST:event_delete_searchActionPerformed

    private void search_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_userActionPerformed
        String user = s_user.getText();
        DefaultTableModel model = (DefaultTableModel) user_table.getModel();
        deleteAllRows(model);
        try {
                    Class.forName("oracle.jdbc.OracleDriver");
                    Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");                    
                    String query="select username,name,email,address,phone from registration where username ='"+user+"'";
                    PreparedStatement pre=con.prepareStatement(query);
                    ResultSet re=pre.executeQuery();
                    if(re.next()){
                        String user_name = re.getString("username");
                        String name = re.getString("name");
                        String email = re.getString("email");
                        String addr = re.getString("address");
                        String phone = re.getString("phone").toString();
                        model.addRow(new Object[]{user_name,name,email,addr,phone});
                    }
                    con.close();
                }catch(ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(null,"User does not exist");
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
                }
        
    }//GEN-LAST:event_search_userActionPerformed

    private void delete_inventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_inventActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) invent_table.getModel();
        int SelectedRowIndex = invent_table.getSelectedRow();
        String product = model.getValueAt(SelectedRowIndex,0).toString().trim();
        String stock_up =stock_box.getText();
        try {
                    Class.forName("oracle.jdbc.OracleDriver");
                    Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");                    
                    String query="update product_list set stock = stock -'"+ stock_up+"' where product_name='"+product+"'  ";
                    PreparedStatement pre=con.prepareStatement(query);
                    ResultSet re=pre.executeQuery();
                    if(re.next()){
                       JOptionPane.showMessageDialog(null,"Product stock updated");
                    }
                    con.close();
                }catch(ClassNotFoundException | SQLException ex){
                    JOptionPane.showMessageDialog(null,"Product entered does not exist");
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_delete_inventActionPerformed

    private void completed_orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completed_orderActionPerformed
        
        try {
                DefaultTableModel model = (DefaultTableModel) orders_total.getModel();
                int SelectedRowIndex = orders_total.getSelectedRow();
                String user =model.getValueAt(SelectedRowIndex,1).toString().trim();
                String pro_name =model.getValueAt(SelectedRowIndex,4).toString().trim();
                Class.forName("oracle.jdbc.OracleDriver");
                Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");
                Statement stat=con.createStatement();
                stat.executeUpdate("update orders set order_status = 'Completed' where username = '"+user+"' and product_name ='"+pro_name+"'");
                stat.executeUpdate("update orders set payment_status = 'Paid' where username = '"+user+"' and product_name ='"+pro_name+"'");
                con.close();
        }catch(ClassNotFoundException | SQLException ex){
            Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
                DefaultTableModel model = (DefaultTableModel) orders_total.getModel();
        deleteAllRows(model);
        try {
                    Class.forName("oracle.jdbc.OracleDriver");
                    Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");                    
                    String query="select * from orders order by order_id";
                    PreparedStatement pre=con.prepareStatement(query);
                    ResultSet re=pre.executeQuery();
                    while(re.next()){
                        String ord_id = re.getString("order_id");
                        String user_name = re.getString("username");
                        String name = re.getString("name");
                        String addr = re.getString("address");
                        String pro_name = re.getString("product_name");
                        String quantity = re.getString("quantity");
                        String price = re.getString("price");
                        String pay_status = re.getString("payment_status");
                        String order_status = re.getString("order_status");
                        String pay_type = re.getString("payment_type");
                        model.addRow(new Object[]{ord_id,user_name,name,addr,pro_name,quantity,price,pay_type,pay_status,order_status});
                    }          
                    con.close();
            }catch(ClassNotFoundException | SQLException ex){
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_completed_orderActionPerformed

    private void search_ordersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_ordersActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) orders_total.getModel();
        deleteAllRows(model);
        String status =(String)status_box.getSelectedItem();
        try 
            {
                Class.forName("oracle.jdbc.OracleDriver");
                Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "Project", "shane95");
                Statement stat=con.createStatement();
                ResultSet re;
                
                if("-All-".equals(status))
                {
                    re=stat.executeQuery("select * from orders order by order_id");
                }
                else{
                    if("Pending".equals(status))
                    {
                        re=stat.executeQuery("select * from orders where order_status='Pending' order by order_id " );
                    }
                    else{
                        re=stat.executeQuery("select * from orders where order_status='Completed' order by order_id" );
                    }
                }    
                while(re.next())
                {
                        String ord_id = re.getString("order_id");
                        String user_name = re.getString("username");
                        String name = re.getString("name");
                        String addr = re.getString("address");
                        String pro_name = re.getString("product_name");
                        String quantity = re.getString("quantity");
                        String price = re.getString("price");
                        String pay_status = re.getString("payment_status");
                        String order_status = re.getString("order_status");
                        String pay_type = re.getString("payment_type");
                        model.addRow(new Object[]{ord_id,user_name,name,addr,pro_name,quantity,price,pay_type,pay_status,order_status});
                }
            }catch(ClassNotFoundException | SQLException ex){
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_search_ordersActionPerformed

    private void log_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_log_outActionPerformed
        // TODO add your handling code here:
        LoginPage r=new LoginPage();
        r.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_log_outActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPage().setVisible(true);
                
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Inv_button;
    private javax.swing.JPanel InventoryPanel;
    private javax.swing.JPanel OrdersPanel;
    private javax.swing.JPanel UserPanel;
    private javax.swing.JButton completed_order;
    private javax.swing.JButton delete_invent;
    private javax.swing.JButton delete_search;
    private javax.swing.JTable invent_table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JButton log_out;
    private javax.swing.JButton oder_button;
    private javax.swing.JTable orders_total;
    private javax.swing.JComboBox<String> productname;
    private javax.swing.JTextField s_user;
    private javax.swing.JButton search_invent;
    private javax.swing.JButton search_orders;
    private javax.swing.JButton search_user;
    private javax.swing.JComboBox<String> status_box;
    private javax.swing.JTextField stock_box;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JButton update_invent;
    private javax.swing.JButton user_button;
    private javax.swing.JTable user_review_table;
    private javax.swing.JTable user_table;
    // End of variables declaration//GEN-END:variables

    private void deleteAllRows(DefaultTableModel model) {
        for(int i=model.getRowCount()-1 ; i>=0 ;i --)
            model.removeRow(i);
    }
}
